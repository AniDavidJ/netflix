{"version":3,"sources":["Components/NavBar/NavBar.js","constants/constants.js","axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","url.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","API_KEY","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","vedioId","setVedioId","url","catch","err","map","isSmall","onClick","id","length","videoId","key","opts","height","width","playerVars","autoplay","orginals","action","horror","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ceb1f32.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./NavBar.css\"\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n           <img className=\"logo\" src='https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png' alt=\"Netflix Logo\" /> \r\n            <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Avatar\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const baseUrl = 'https://api.themoviedb.org/3';\r\nexport const API_KEY = '98dde8d0417a6ba805d345d4bc2143f9';\r\nexport const imageUrl = 'https://image.tmdb.org/t/p/original'\r\n","import axios from 'axios'\r\nimport {baseUrl} from './constants/constants'\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl,\r\n  });\r\n  export default instance;","import \"./Banner.css\";\r\nimport React,{ useEffect, useState } from \"react\";\r\nimport {API_KEY,imageUrl} from '../../constants/constants'\r\nimport axios from '../../axios'\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState()\r\n    useEffect(() => {\r\n       axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((response)=>{\r\n           console.log(response.data.results[0]);\r\n           setMovie(response.data.results[0])\r\n       })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"banner\" style={{backgroundImage:`url(${movie ? imageUrl+movie.backdrop_path : \"\"})`}}>\r\n            \r\n            <div className=\"content\">\r\n                <h1 className=\"title\">{movie? movie.title : \"\"}</h1>\r\n                <div className=\"banner_button\">\r\n                <button className=\"button\">Play</button>\r\n                <button className=\"button\">MyList</button>\r\n            </div>\r\n            <h1 className=\"description\"> {movie? movie.overview : null}</h1>\r\n            </div>\r\n            <div className=\"fade_bottom\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./RowPost.css\";\r\nimport axios from \"../../axios\";\r\nimport {imageUrl, API_KEY } from \"../../constants/constants\";\r\nimport Youtube from 'react-youtube'\r\n\r\nfunction RowPost(props) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [vedioId,setVedioId] = useState('');\r\n    useEffect(() => {\r\n        axios\r\n            .get(props.url)\r\n            .then((response) => {\r\n                setMovies(response.data.results);\r\n            })\r\n            .catch((err) => {\r\n                //alert(err);\r\n            });\r\n    }, []);\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n      const handleMovie = (id)=>{\r\n          console.log(id);\r\n          axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\r\n            //   console.log(response.data.results)\r\n              if(response.data.results.length!=0){\r\n                  setVedioId(response.data.results[0])\r\n              }else{\r\n                  console.log('Array Empty');\r\n              }\r\n          });\r\n      }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"posters\">\r\n                { movies.map((data)=> \r\n                    <img\r\n                    className={props.isSmall ? \"smallPoster\" : \"poster\"}\r\n                    src={`${imageUrl+data.backdrop_path}`}\r\n                    alt=\"Poster\" onClick={()=>handleMovie(data.id)}\r\n                />     \r\n                )}    \r\n            </div>\r\n             { vedioId  &&  <Youtube videoId={vedioId.key} opts={opts} />  }   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RowPost;\r\n","import { API_KEY } from \"./constants/constants\"\r\nexport const orginals =`discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`\r\nexport const horror = `discover/movie?api_key=${API_KEY}&with_genres=27`","import \"./App.css\";\nimport React from \"react\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport Banner from \"./Components/Banner/Banner\";\nimport RowPost from \"./Components/RowPost/RowPost\";\nimport {orginals,action,horror  } from \"./url\";\nfunction App() {\n    return (\n        <div className=\"App\">\n            <NavBar />\n            <Banner />\n            <RowPost url={orginals} title='NetFlix Orginals'/ >\n            <RowPost url={action} title='Action' isSmall / >\n            <RowPost url={horror} title='Horror' isSmall / >\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}